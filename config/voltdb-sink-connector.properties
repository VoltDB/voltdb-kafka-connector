 #
 # The MIT License (MIT)
 #
 # Copyright (C) 2008-2016 VoltDB Inc.
 #
 # Permission is hereby granted, free of charge, to any person obtaining a copy
 # of this software and associated documentation files (the "Software"), to deal
 # in the Software without restriction, including without limitation the rights
 # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 # copies of the Software, and to permit persons to whom the Software is
 # furnished to do so, subject to the following conditions:
 #
 # The above copyright notice and this permission notice shall be included in
 # all copies or substantial portions of the Software.
 #
 # THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 # IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 # FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 # AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 # OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 # THE SOFTWARE.
 #

# Unique name for the connector
name=KafkaSinkConnector

#The Java class for the connector
connector.class=org.voltdb.connect.kafka.KafkaSinkConnector

#The user name to connect VoltDb
voltdb.connection.user=

#The password to connect VoltDB
voltdb.connection.password=

# A list of Voltdb server nodes with ',' as delimiter. example: server1:21212,server2:21212.
voltdb.servers=localhost:21212

#the procedure name to be used to insert data to VoltDB.
voltdb.procedure=

#The data formatter factory used to convert Kafka data into the format required by VoltDB procedure.
#org.voltdb.connect.formatter.CSVFormatterFactory is the default for data transformation in CSV format.
#Implement AbstractFormatterFactory for the data format other than CSV.
formatter.factory.class=org.voltdb.connect.formatter.CSVFormatterFactory

#The type of formatter
formatter.type=csv

#The Java class for data conversion from SinkRecord to byte stream. Application may utilize custom converter class if needed
#org.voltdb.connect.converter.JsonDataConverter is the default.
data.converter.class=org.voltdb.connect.converter.JsonDataConverter

#The maximum number of tasks that should be created for this connector
tasks.max=1

#Topics to use as input for this connector
topics=test

#Use Kerberos authentication module.
kerberos.authentication=

