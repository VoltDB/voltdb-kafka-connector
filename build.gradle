/*
 * The MIT License (MIT)
 *
 * Copyright (C) 2008-2016 VoltDB Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

plugins {
  id 'java'
  id 'eclipse'
  id 'com.github.johnrengelman.shadow' version '1.2.3'
}

archivesBaseName = 'voltdb-sink-connector'
description = 'VoltDB Sink Connector'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    voltlib
    connect
}

def volt = fileTree(dir: "${voltdbhome}/voltdb", include: "voltdbclient-${dbversion}.jar")
def formatter = fileTree(dir: "${buildDir}/distributions", include: "${archivesBaseName}-${version}.zip")


dependencies {
    voltlib volt
    voltlib formatter
    connect ('org.apache.kafka:connect-api:0.10.0.0') { transitive = false }
    connect ('org.apache.kafka:kafka-clients:0.10.0.0') { transitive = false }
    connect ('org.apache.kafka:connect-json:0.10.0.0') { transitive = false }
    voltlib ('com.fasterxml.jackson.core:jackson-databind:2.5.3') { transitive = true }
    voltlib ('com.fasterxml.jackson.core:jackson-annotations:2.5.3') { transitive = true }
    voltlib ('com.fasterxml.jackson.core:jackson-core:2.5.3') { transitive = true }
    voltlib ('com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.5.3') { transitive = true }
    
    compile configurations.connect
    compile configurations.voltlib
}

shadowJar {
    mergeServiceFiles()
    configurations = [project.configurations.voltlib]
}

task prepare(type: Copy) {
    def zipFile = file("${voltdbhome}/voltdb/voltdb-${dbversion}.jar")
    def outputDir = file("${buildDir}/unpacked/")

    from zipTree(zipFile)
    into outputDir
}

task zip(type: Zip) {
    from "${buildDir}/unpacked/"
    include 'org/voltdb/importer/formatter/**'
}
